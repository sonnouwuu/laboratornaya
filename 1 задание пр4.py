'''Напишите программу по следующему описанию. Есть класс &quot;Воин&quot;. От него 
создаются два экземпляра-юнита---. Каждому устанавливается здоровье в 100 
очков. В случайном порядке они бьют друг друга. Тот, кто бьет, здоровья не 
теряет. У того, кого бьют, оно уменьшается на 20 очков от одного удара. После 
каждого удара надо выводить сообщение, какой юнит атаковал, и сколько у 
противника осталось здоровья. Как только у кого-то заканчивается ресурс 
здоровья, программа завершается сообщением о том, кто одержал победу. 
 
Самостоятельно выполните полное документирование кода.''' 
 
 
from random import randint 
class Soldier:# описание класса воин 
    health= 100# поле класса (определяет кол-во здоровья воинов) 
    def set_name(self, name):#метод класса (отвечает за присваивание имени экземпляру класса) 
        self.name = name#поле  
    def make_kick(self, enemy):#метод класса (отвечает за результаты самого боя) 
        enemy.health -= 20# порисходит вычитание очков здоровья у врага 
        print(self.name, 'бьет', enemy.name)#выводится имя того кто бьёт и того кого бьют 
        print('%s = %d' % (enemy.name, enemy.health))#выводятся оставшиеся очки здоровья у тако кого ударили 
class Battle:#описание класса сражение 
    result = 'Сражения не было' 
    def battle(self, u1, u2):# метод класса (в качестве аргументов получает объект типа Battle, который присваивается параметру self, и два объекта типа Soldier. 
        while u1.health>0 and u2.health>0:# цикл который выполняется до тех пор пока здоровье какого лтбо из воинов не будет равно 0 
            n = randint(1, 2)# случайный выбор нападающего 
            if n == 1:#если 1 то нападает первый воин 
                u1.make_kick(u2)#вызов метода make_kick 
            else:# если 2 то нападает второй воин 
                u2.make_kick(u1)#вызов метода make_kick 
        if u1.health > u2.health:#если здоровье первого  больше здоровья второго 
            self.result = u1.name + ' ПОБЕДИЛ'#  полю результат присваивается значение (сообщение о том что победтл первый) 
        elif u2.health > u1.health:# если здоровье второго  больше здоровья первого 
            self.result = u2.name +' ПОБЕДИЛ'# полю результат присваивается значение (сообщение о том что победтл второй) 
    def who_win(self):# метод класса    Battle (отвечает за вывод результата сражения) 
        print(self.result)#выводится результат  
first = Soldier()# создание экземпляра класса Soldier  
second = Soldier()# создание экземпляра класса Soldier 
first.set_name('AAA')# пресваивание имени первому воину ( с помощью вызова метода set_name) 
second.set_name('BBB')# пресваивание имени второму воину ( с помощью вызова метода set_name) 
b = Battle()#  создание экземпляра класса Battle 
b.battle(first, second)#вызов метода battle( класса Battle)  и передача в него в качестве аргументов двух экземпляров класса Soldier 
b.who_win()# вызов метода who_win( класса Battle)
